name: Build & Test

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      pull-requests: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3

      - name: Set up Android SDK
        uses: android-actions/setup-android@v2

      - name: List SDK Packages
        run: sdkmanager --list
        env:
          ANDROID_HOME: ${{ github.workspace }}/android-sdk

      - name: Install Emulator
        run: |
          # Instala a imagem do sistema
          echo "y" | sdkmanager "system-images;android-30;google_apis;x86"

          # Cria o AVD
          echo "no" | avdmanager create avd -n test -k "system-images;android-30;google_apis;x86" --device "pixel"

          # Inicializa o emulador em segundo plano
          nohup $ANDROID_HOME/emulator/emulator -avd test -no-audio -no-boot-anim -gpu off > emulator.log 2>&1 &

          # Aguarda o emulador estar pronto
          adb wait-for-device
          adb shell input keyevent 82  # Desbloqueia a tela, se necess√°rio
        env:
          ANDROID_HOME: ${{ github.workspace }}/android-sdk

      - name: Start Emulator
        run: |
          emulator -avd test -no-snapshot -no-audio -no-boot-anim -gpu off &

      - name: Wait for Emulator
        run: |
          $ANDROID_HOME/emulator/emulator -list-avds
          adb wait-for-device
          adb shell input keyevent 82

      - name: Run Unit Tests
        run: ./gradlew testDebugUnitTest

      - name: Run Instrumented Tests
        run: ./gradlew connectedDebugAndroidTest
